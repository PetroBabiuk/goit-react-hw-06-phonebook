{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","handleChange","evt","currentTarget","value","reset","preventDefault","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","button","Filter","inputId","labeltId","ContactListItem","onDelete","item","onClick","ContactList","contacts","onDeleteContact","list","map","App","filter","setFilter","setContacts","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","foundNames","contact","toLocaleLowerCase","lowerName","includes","alert","prevContacts","lowerCasedFilter","visibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.346987f8.chunk.js","sourcesContent":["import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    const handleChange = (evt) => {\n        const { name, value } = evt.currentTarget;\n\n        if (name === 'name') {\n            setName(value);\n        } else if (name === 'number') {\n            setNumber(value);\n        };\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onSubmit({ name, number });\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label} htmlFor={nameInputId}>Name</label>\n            <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                id={nameInputId}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={handleChange}\n            />\n\n            <label className={s.label} htmlFor={numberInputId}>Number</label>\n            <input\n                className={s.input}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                id={numberInputId}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={handleChange}\n            />\n                \n            <button\n                className={s.button}\n                type=\"submit\"\n            >\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nexport default ContactForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({value, onChange}) => {\n    const inputId = shortid.generate();\n    const labeltId = shortid.generate();\n    return (\n    <>\n        <div className={s.form}>\n            <label htmlFor={labeltId} className={s.label}> Find contacts by name</label>\n            <input className={s.input} id={inputId} type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    </>\n    )\n}    \n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDelete }) => (\n    <li className={s.item}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={onDelete}>Delete</button>\n    </li>\n\n);\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({contacts, onDeleteContact}) => (\n    <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n            <ContactListItem\n                key={id}\n                name={name}\n                number={number}\n                onDelete={() => onDeleteContact(id)}\n            />\n        ))}\n        \n    </ul>\n);\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React, {useState, useEffect} from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => {\n  const [filter, setFilter] = useState('');\n  const [contacts, setContacts] = useState([]);\n\n    useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const changeFilter = (evt) => {\n    setFilter(evt.currentTarget.value);\n  };\n\n  const addContact = ({ name, number }) => {\n    const foundNames = contacts.map(contact => contact.name.toLocaleLowerCase());\n    const lowerName = name.toLocaleLowerCase();\n    if(foundNames.includes(lowerName)){\n     return alert(`${name} is already in contacts`);\n    }\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n\n    setContacts(prevContacts => ([contact, ...prevContacts]));\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== contactId));\n  };\n\n  const visibleContacts = () => {\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact => contact.name.toLocaleLowerCase().includes(lowerCasedFilter))\n  };\n\n  return (\n    <div>\n      <h1 className=\"text\">Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2 className=\"text\">Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts()} onDeleteContact={deleteContact} />\n    </div>\n  )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}