{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/types.js","redux/reducer.js","redux/store.js","redux/actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","types","ADD","DELETE","CHANGE_FILTER","combineReducers","contacts","state","type","payload","foundNames","map","name","toLocaleLowerCase","lowerName","includes","alert","filter","id","rootReducer","phoneBook","phoneBookReducer","store","createStore","composeWithDevTools","actions","addContact","number","shortid","generate","deleteContact","contactId","changeFilter","value","connect","dispatch","onSubmit","useState","setName","setNumber","nameInputId","numberInputId","handleChange","evt","currentTarget","reset","preventDefault","className","s","form","label","htmlFor","input","pattern","title","required","onChange","button","e","target","inputId","labeltId","ContactListItem","onDelete","item","onClick","getVisibleContacts","allContacts","normalizedFilter","onDeleteContact","list","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1f9a20b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__2qyBI\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","const types = {\n    ADD: 'phoneBook/addContact',\n    DELETE: 'phoneBook/deleteContact',\n    CHANGE_FILTER: 'phoneBook/changeFilter',\n}\nexport default types;\n","import { combineReducers } from \"redux\";\nimport types from \"./types\";\n\nconst contacts = (state = [], { type, payload }) => {\n    switch (type) {\n        case types.ADD:\n            const foundNames = state.map(({name}) => name.toLocaleLowerCase());\n            const lowerName = payload.name.toLocaleLowerCase();\n            if(foundNames.includes(lowerName)){\n                alert(`${payload.name} is already in contacts`);\n                return state;\n            }\n            return [payload, ...state];\n        \n        case types.DELETE:\n            return state.filter(({ id }) => id !== payload);\n        \n        default:\n            return state;\n    }\n}\n\nconst filter = (state = '', {type, payload}) => {\n    switch (type) {\n        case types.CHANGE_FILTER:\n            return payload;\n    \n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    contacts,\n    filter,\n});","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport phoneBookReducer from './reducer';\n\nconst rootReducer = combineReducers({\n    phoneBook: phoneBookReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;","import shortid from 'shortid';\nimport types from \"./types\";\n\nconst addContact = (name, number) => ({\n    type: types.ADD,\n    payload: {\n        id: shortid.generate(),\n        name,\n        number,\n      }\n});\n\nconst deleteContact = contactId => ({\n    type: types.DELETE,\n    payload: contactId,\n});\n\nconst changeFilter = value => ({\n    type: types.CHANGE_FILTER,\n    payload: value,\n});\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport actions from 'redux/actions';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const nameInputId = shortid.generate();\n    const numberInputId = shortid.generate();\n\n    const handleChange = (evt) => {\n        const { name, value } = evt.currentTarget;\n\n        if (name === 'name') {\n            setName(value);\n        } else if (name === 'number') {\n            setNumber(value);\n        };\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        onSubmit( name, number );\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit} className={s.form}>\n            <label className={s.label} htmlFor={nameInputId}>Name</label>\n            <input\n                className={s.input}\n                value={name}\n                type=\"text\"\n                name=\"name\"\n                id={nameInputId}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={handleChange}\n            />\n\n            <label className={s.label} htmlFor={numberInputId}>Number</label>\n            <input\n                className={s.input}\n                value={number}\n                type=\"tel\"\n                name=\"number\"\n                id={numberInputId}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={handleChange}\n            />\n                \n            <button\n                className={s.button}\n                type=\"submit\"\n            >\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(actions.addContact(name,number)),\n})\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from 'redux/actions';\nimport shortid from 'shortid';\nimport s from './Filter.module.css';\n\nconst Filter = ({value, onChange}) => {\n    const inputId = shortid.generate();\n    const labeltId = shortid.generate();\n    return (\n    <>\n        <div className={s.form}>\n            <label htmlFor={labeltId} className={s.label}> Find contacts by name</label>\n            <input className={s.input} id={inputId} type=\"text\" value={value} onChange={onChange}/>\n        </div>\n    </>\n    )\n}    \n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n    value: state.phoneBook.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChange: (e) => dispatch(actions.changeFilter(e.target.value))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDelete }) => (\n    <li className={s.item}>\n        <span>{name}:</span>\n        <span>{number}</span>\n        <button type=\"button\" onClick={onDelete}>Delete</button>\n    </li>\n\n);\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;","import ContactListItem from './ContactListItem';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport actions from '../../redux/actions';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        contacts && (<ul className={s.list}>\n            {contacts.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    name={name}\n                    number={number}\n                    onDelete={() => onDeleteContact(id)}\n                />\n            ))}\n        \n        </ul>)\n    );\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    return allContacts.filter(({name}) =>\n        name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n}\n\nconst mapStateToProps = ({ phoneBook: { contacts, filter } }) => ({\n    contacts: getVisibleContacts(contacts, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => {\n\n  //   useEffect(() => {\n    // const contacts = JSON.parse(localStorage.getItem('contacts'));\n    // if (contacts) {\n    //   setContacts(contacts);\n    // }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <div>\n      <h1 className=\"text\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"text\">Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n\n}\n\nexport default (App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n// import { myAction } from './redux/actions';\n// import store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"button\":\"ContactForm_button__1MLZK\"};"],"sourceRoot":""}